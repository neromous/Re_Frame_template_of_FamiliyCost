#+title: 一个Re_Frame的web应用版本, 掺杂了一堆私货的东西


** 建立在消化和整合re_frame的基础样板以及jiesoul的前端web模板的基础上, 主要提供了以下改进
- 增加了mvc 模型, 使得前端可以使用类似后端的mvc 模型来进行页面开发, 作为一个后端菜鸟来说现在写前端很happy.
- 将redux的全局state内的keys路径当做资源来管理
- 可增加报表功能, 暂时还没做 
- 尽可能的减少atom的引入, 保证组件操作以外的操作都建立在对全局state的基础上进行
- 对re_frame的默认模板中的events代码组织进行重新排布, 提高代码组织性
- 支持模型默认的增删改查页面直接生成, 并增加实体之间的外键支持(简单的)
- 增加模型的默认 服务器端拉取  服务器端与页面段数据更新的方法, 现在已经可以在添加模型时同时生成所需方法
- 预备支持多种后端的restful接口, 现在已经支持django的无缝对接.  并且添加扩展很容易.  
- 实际上这是个给老婆用的记账本. 现在还没开始梳理业务,
- 增强了路由功能, 同时增强了绑定路由部分的多重方法, 使其能够承载更多的页面,并更容易根据领域对页面进行分组.

** 附注 本项目启发自jiesoul的soul-talk项目,  并非完全原创
同时热烈庆祝终于我能开始写前端了, 真他娘的泪目.






* 进度计划表
1. 完成数据库表关系元数据map的  字段属性的录入窗口, 采用app-db存储, 定时同步到后台, 以json存储
2. 完成前端与后端对应元数据的方法封装, 
3. 完成后端采用post方法基础上的路由的封装, 采用多重方法, 
4. 完成根据元数据map执行的前后端dto模型, 用于前后端数据dto处理
5. 完成康平纳当前成本与其他分析的接口, 与前端对接口
6. 康平纳当前成本与订单跟踪页面 
