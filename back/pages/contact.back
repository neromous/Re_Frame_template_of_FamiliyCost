(ns soul-talk.pages.contact
  (:require [reagent.core :as r]
            [re-frame.core :as rf]
            [soul-talk.layouts.skeleton :as skeleton]
            [soul-talk.components.global-header :as header]
            [soul-talk.components.nav :as nav]
            [soul-talk.components.siderbar :as side]
            [soul-talk.components.itemlist :as itemlist]
            [soul-talk.components.table :as table]
            [soul-talk.components.global-footer :as footer]
            [soul-talk.handler.model :refer [envs]]
            [re-frame.core :refer [subscribe]]
            [soul-talk.utils :as utils]))

(defn contact-columns
  ""
  [model data]

  [{:title "id" :dataIndex "id" :key "id"}
   (utils/columns-make-filter :name "姓名" model data)
   ;; {:title "姓名" :dataIndex "name", :key "name", :align "center"

   ;;  :filters (for [item (set (map :name @data))] {:text item  :value item})
   ;;  :onFilter (fn [value record]    (= (-> record (js->clj :keywordize-keys true) :name) value))}

   {:title "淘宝id" :dataIndex "taobaoId", :key "taobaoId", :align "center"}
   {:title "地址" :dataIndex "address", :key "address", :align "center"}
   {:title "所在地" :dataIndex "area", :key "area", :align "center"}
   {:title "是否是供应商" :dataIndex "isSupplier", :key "isSupplier", :align "center"}])

(def contact-table (table/sample-table (-> @envs :contact) contact-columns))

(defn contact-content []
  [:> js/antd.Layout.Content
   (for [filter_name ["测试1" "测试2"]] [:> js/antd.Select {:defaultValue filter_name
                                                        :key filter_name}])
   [:> js/antd.Button {} "清除排序"]
   [:> js/antd.Button {} "清除排序"]
   [contact-table]])


